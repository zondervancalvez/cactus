# Below are the full description for the shorten job names:
#
# ce - cactus-example
# cp - cactus-plugin
# cpk - cactus-plugin-keychain
# cpl - cactus-plugin-ledger
# cplc - cactus-plugin-ledger-connector
# plc - plugin-ledger-connector
# cpp - cactus-plugin-persistence
# ct - cactus-test
# ctp - cactus-test-plugin
---
env:
  NODEJS_VERSION: v18.18.2
  RUN_TRIVY_SCAN: true 
  PR_BODY: ${{ github.event.pull_request.body }}
  BEFORE_REF: ${{ github.event.before }}
  AFTER_REF: ${{ github.event.after }}
 
jobs:
  PR-desc-and-commit-msg-checker:
    runs-on: ubuntu-22.04
 
    steps:
      - uses: actions/checkout@v4
      - name: Get PR description
        run: |
          pr_description="${PR_BODY}"
          
          start_string="**Pull Request Requirements**"

          start_pos=$(echo "$pr_description" | grep -b -m 1 "$start_string" | cut -d: -f1)

          if [ $start_pos ]; then
            pr_description="${pr_description:0:$start_pos}"
          fi

          echo "$pr_description" > updated_description.txt
          echo "PR description:"
          cat updated_description.txt
 
      - name: Get branch commit messages
        id: get_branch_commit_messages
        run: |
          PR_NUMBER=$(echo "${{ github.event.pull_request.url }}" | grep -oP '\d+$')
          API_URL="https://api.github.com/repos/${{ github.repository }}/pulls/${PR_NUMBER}/commits"
          COMMIT_MESSAGES=$(curl -sSL -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" "${API_URL}" | jq -r '.[].commit.message')
          echo "$COMMIT_MESSAGES" > branch_commit_messages.txt
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
 
      - name: Print branch commit messages
        run: |
          echo "Commit messages:"
          cat branch_commit_messages.txt

      - name: Compare PR Description and Commit Messages
        id: compare
        run: |
          commit_messages=$(<branch_commit_messages.txt)
          updated_pr=$(<updated_description.txt)

          # compare commit messages and pr description
          while IFS= read -r commit_messages; do
            if grep -qF "$commit_messages" <<< "$updated_pr"; then

              readarray -t lines1 <<<"$updated_pr"
              readarray -t lines2 <<<"$commit_messages"

              # compare commit messages and pr description line by line
              for i in "${lines1[@]}"; do
                for y in "${lines2[@]}"; do
                  if [[ "${lines1[i]}" == "${lines2[y]}" ]]; then
                    echo "****CHECKING**** ${lines1[i]} \n ${lines2[y]}"
                    echo "Match found"
                    lines_match="true"
                    break
                  fi
                done
                if [ "$lines_match" = "true" ]; then
                  break
                fi
              done
              if [ "$lines_match" = "false" ]; then
                echo "No match found between updated PR description and commit messages."
                exit 1
              fi
            fi
          done <<< "$commit_messages"
          echo "PR description matches commit messages."

name: Cactus_CI
'on':
  pull_request:
    types: [opened, synchronize, edited]
    branches:
      - main
      - dev
      - petermetz/**
  push:
    branches:
      - main
      - dev