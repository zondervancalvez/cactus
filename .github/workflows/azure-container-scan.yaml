name: azure-container-image-scan

on:
  push:
  pull_request:
    # Publish `main` as Docker `latest` image.
    branches:
      - main

    # Publish `v1.2.3` tags as releases.
    tags:
      - v*

env:
  IMAGE_NAME_1: cactus-whitepaper
  IMAGE_NAME_2: cactus-cmd-api-server

jobs:
 build-secure-and-push:
    name: cactus-whitepaper job
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      env:
          # (Required) The token to use to make API calls to GitHub.
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          DOCKER_BUILDKIT: 1
          DOCKERFILE_PATH: ./whitepaper/Dockerfile

    - uses: actions/checkout@v1
    - name: Login to DockerHub Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin


    - name: Build Image from Dockerfile
      run:  DOCKER_BUILDKIT=1 docker build -f $DOCKERFILE_PATH -t $IMAGE_NAME_1 .

    - uses: Azure/container-scan@v0.1
      name: Scan image for vulnerabilities
      id: container-scan
      continue-on-error: true
      with:
        image-name: $IMAGE_NAME_1


 build-secure-and-push-2:
    name: cactus-cmd-api-server job
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
      env:
          # (Required) The token to use to make API calls to GitHub.
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          DOCKER_BUILDKIT: 1
          DOCKERFILE_PATH: ./packages/cactus-cmd-api-server/Dockerfile

    - uses: actions/checkout@v1
    - name: Login to DockerHub Registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin


    - name: Build Images from Dockerfile
      run:  DOCKER_BUILDKIT=1 docker build -f $DOCKERFILE_PATH -t $IMAGE_NAME_2 .

    - uses: Azure/container-scan@v0.1
      name: Scan image for vulnerabilities
      id: container-scan
      continue-on-error: true
      with:
       image-name: $IMAGE_NAME_2